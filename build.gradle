plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.4.0'
}

group = 'com.ronnyrom'
version = '0.0.1-SNAPSHOT'
description = 'techincal-test-inditex'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.21'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:2.2.0'
    implementation 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi.yml"
    outputDir = layout.buildDirectory.get().asFile.path + "/generated"
    apiPackage = "com.ronnyrom.adapter.in.web"
    modelPackage = "com.ronnyrom.adapter.in.web.model"
    invokerPackage = "com.ronnyrom.adapter.in.web.invoker"
    configOptions = [
            interfaceOnly: 'true',
            useTags: 'true',
            useJakartaEe: 'true'
    ]
}
sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}
tasks.named('compileJava') { dependsOn tasks.named('openApiGenerate') }

tasks.named('test') {
    useJUnitPlatform()
}
